name: Search Engine CD pipeline
on: [push]

jobs:
#  build:
#    name: Build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Login to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/neo-searchengine:latest

  deploy:
      name: Deploy
      runs-on: ubuntu-latest
      environment: production
      # needs:
      #   - Build
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Run docker-compose
          run: |
            which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
            mkdir -p ~/.ssh
            eval $(ssh-agent -s)
            echo "${{ secrets.EC2_PRIVATE_KEY }}"
            echo "${{ secrets.EC2_PRIVATE_KEY  }}" > private_key.pem && chmod 400 private_key.pem
            echo  "ceci est un test" > test
            cat test
            ssh -o StrictHostKeyChecking=no -i "private_key.pem" ${{ secrets.EC2_USERNAME  }}@${{ secrets.EC2_HOSTNAME  }} ; whoami
            
              #Now we have got the access of EC2 and we will start the deploy .
              sudo docker-compose rm -s -v -f search_engine
              sudo docker-compose up -d search_engine